{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","client","ZoomMtgEmbedded","createClient","apiKey","meetingNumber","URLSearchParams","window","location","search","get","userName","passWord","className","src","alt","width","height","id","onClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","meetingSDKElement","document","getElementById","init","debug","zoomAppRoot","language","customize","meetingInfo","toolbar","buttons","text","console","log","join","password","userEmail","startMeeting","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uMAOAA,QAAQC,aAAa,mCAAoC,OAEzDD,QAAQE,cACRF,QAAQG,gBAERH,QAAQI,KAAKC,KAAK,SAClBL,QAAQI,KAAKE,OAAO,SA6FLC,MA3Ff,WAEE,IAAMC,EAASC,gBAAgBC,eAI3BC,EAAS,yBACTC,EAAgB,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,iBAEhEC,EAAW,UAEXC,EAAW,IAAIN,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,YAuD/D,OACF,sBAAKG,UAAU,MAAf,UACM,iCAEE,+CACA,qBAAKC,IAAI,8EAA8EC,IAAI,cAAcC,MAAM,MAAMC,OAAO,QAG5H,qBAAKC,GAAG,sBAIR,wBAAQC,QAjEd,SAAsBC,GACpBA,EAAEC,iBAEFC,MAXsB,uCAWG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBtB,cAAeA,EACfuB,KAbK,MAeNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,IAOR,SAAsBC,GAEpB,IAAIC,EAAoBC,SAASC,eAAe,qBAEhDnC,EAAOoC,KAAK,CACVC,OAAO,EACPC,YAAaL,EACbM,SAAU,QACVC,UAAW,CACTC,YAAa,CAAC,QAAS,OAAQ,KAAM,MAAO,SAAU,SAAU,cAAe,KAAM,WACrFC,QAAS,CACPC,QAAS,CACP,CACEC,KAAM,YACNhC,UAAW,eACXM,QAAS,WACP2B,QAAQC,IAAI,wBASxB9C,EAAO+C,KAAK,CACX5C,OAAQA,EACR6B,UAAWA,EACX5B,cAAeA,EACf4C,SAAUrC,EACVD,SAAUA,EACTuC,UApDY,KAeZC,CAAanB,EAASC,cACrBmB,OAAM,SAAAC,GACPP,QAAQO,MAAMA,OAmDZ,mCAEN,+CACI,uEACA,oDACJ,+CACI,gDACA,mDCxFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,SAM1BkB,K","file":"static/js/main.321e45a6.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\ndeclare var ZoomMtgEmbedded\ndeclare var ZoomMtg\n\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.1.0/lib', '/av');\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareWebSDK();\n// loads language files, also passes any error messages to the ui\nZoomMtg.i18n.load('en-US');\nZoomMtg.i18n.reload('en-US');\n\nfunction App() {\n\n  const client = ZoomMtgEmbedded.createClient();\n\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\n  var signatureEndpoint = 'https://siganturezoom.herokuapp.com/'\n  var apiKey = 'qzloYzd5SRKT9ve2PMc88Q'\n  var meetingNumber = new URLSearchParams(window.location.search).get('meetingnumber')\n  var role = 1\n  var userName = 'Trainee'\n  var userEmail = ''\n  var passWord = new URLSearchParams(window.location.search).get('passcode')\n\n  function getSignature(e) {\n    e.preventDefault();\n\n    fetch(signatureEndpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        meetingNumber: meetingNumber,\n        role: role\n      })\n    }).then(res => res.json())\n    .then(response => {\n      startMeeting(response.signature)\n    }).catch(error => {\n      console.error(error)\n    })\n  }\n\n  function startMeeting(signature) {\n\n    let meetingSDKElement = document.getElementById('meetingSDKElement');\n\n    client.init({\n      debug: true,\n      zoomAppRoot: meetingSDKElement,\n      language: 'en-US',\n      customize: {\n        meetingInfo: ['topic', 'host', 'mn', 'pwd', 'telPwd', 'invite', 'participant', 'dc', 'enctype'],\n        toolbar: {\n          buttons: [\n            {\n              text: 'Load Form',\n              className: 'CustomButton',\n              onClick: () => {\n                console.log('custom button');\n              \n              }          \n            }\n          ]\n        }\n      }\n    });\n\n    client.join({\n    \tapiKey: apiKey,\n    \tsignature: signature,\n    \tmeetingNumber: meetingNumber,\n    \tpassword: passWord,\n    \tuserName: userName,\n      userEmail: userEmail\n    })\n  }\n\n  return (\n<div className=\"App\">\n      <main>\n        \n        <h1>Coach Anthony</h1>\n        <img src=\"https://zoom.us/account/branding/p/50f55c16-9500-42ea-bf54-cb4148646883.png\" alt=\"Magaoay INC\" width=\"120\" height=\"120\"></img>\n        \n        {/* For Component View */}\n        <div id=\"meetingSDKElement\">\n          {/* Zoom Meeting SDK Component View Rendered Here */}\n        </div>\n\n        <button onClick={getSignature}>MeetNow with Coach</button>\n      </main>\n  <h2>Training Days</h2>\n      <p>Schedule an appointment with a trainer</p>\n      <p>Enter fitness goals</p>\n  <h3>Rate Yourself</h3>\n      <p>Excellent Shape</p>\n      <p>I'm doing okay</p>\n</div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}